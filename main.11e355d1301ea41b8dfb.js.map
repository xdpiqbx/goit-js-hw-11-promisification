{"version":3,"sources":["webpack:///./js/task-03.js"],"names":["makeTransaction","transaction","min","max","delay","Math","floor","random","Promise","resolve","reject","setTimeout","id","logSuccess","args","console","log","logError","warn","amount","then","catch"],"mappings":"2JASMA,EAAkB,SAACC,GAEzB,IANmCC,EAAKC,EAMlCC,GAN6BF,EAMK,IANAC,EAMK,IALpCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAMtD,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACUN,KAAKE,SAAW,GAEjCE,EAAS,CAACR,EAAYW,GAAIR,IAE1BM,EAAOT,EAAYW,MAEpBR,OAICS,EAAa,SAACC,GAClBC,QAAQC,IAAR,eAA2BF,EAAK,GAAhC,iBAAmDA,EAAK,GAAxD,QAGIG,EAAW,SAAAL,GACfG,QAAQG,KAAR,gCAA6CN,EAA7C,8BAKFZ,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MACjCC,KAAKP,GACLQ,MAAMJ,GAEPjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MACjCC,KAAKP,GACLQ,MAAMJ,GAEPjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,KACjCC,KAAKP,GACLQ,MAAMJ,GAEPjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MACjCC,KAAKP,GACLQ,MAAMJ,K","file":"main.11e355d1301ea41b8dfb.js","sourcesContent":["/*\r\nПерепиши функцию makeTransaction() так, чтобы она не использовала callback-функции onSuccess и onError,\r\nа принимала всего один параметр transaction и возвращала промис.\r\n*/\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  \r\nconst delay = randomIntegerFromInterval(200, 500);\r\nreturn new Promise((resolve, reject)=>{\r\n  setTimeout(() => {\r\n    const canProcess = Math.random() > 0.3;\r\n    if (canProcess) {\r\n      resolve( [transaction.id, delay] );\r\n    } else {\r\n      reject(transaction.id);\r\n    }\r\n  }, delay);\r\n})\r\n};\r\n\r\nconst logSuccess = (args) => {\r\n  console.log(`Transaction ${args[0]} processed in ${args[1]} ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n.then(logSuccess)\r\n.catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n.then(logSuccess)\r\n.catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n.then(logSuccess)\r\n.catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n.then(logSuccess)\r\n.catch(logError);"],"sourceRoot":""}